package main

import "fmt"

// Удалить i-ый элемент из слайса.
func main() {
	sl := []int{1, 2, 3, 4, 5, 6, 7}
	fmt.Println(removeItem(sl, 3)) // [0 0 0 0 0 0]
	fmt.Println(removeItem2(sl, 3))
}

// Отсечение элемента с сохранением последовательности.
// pos - отсчет от 0
func removeItem(sl []int, pos int) []int {
	r := make([]int, 0, len(sl)-1)

	// Берем нужные участки
	r = append(r, sl[:pos]...)
	r = append(r, sl[pos+1:]...)

	return r
}

// Отсечение элемента с изменением последовательности.
func removeItem2(sl []int, pos int) []int {
	// Копируем в место удаляемого последний элемент.
	sl[pos] = sl[len(sl)-1]
	// Берем срез без скопированного элемента.
	sl = sl[:len(sl)-1]

	return sl
}

// Данный пример не очень хороший, потому что изначальный
// массив, на который ссылался слайс остался неизменным,
// и соответственно он занимает тот же объем памяти.
